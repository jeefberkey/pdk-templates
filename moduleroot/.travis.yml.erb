<% require 'yaml'
if @configs['override'] && @configs.has_key?('custom')
  configs = @configs['custom']
elsif @configs['defaults'] && !@configs.has_key?('custom')
  configs = @configs['defaults']
else
  require 'deep_merge/core'
  defaults = @configs['defaults'].dup
  configs = DeepMerge::deep_merge!(defaults, @configs['custom'])
end
# yaml print, without trailing whitespace and leading ---
def yp(obj,i=0)
  obj.to_yaml.split("\n").map(&:rstrip)[1..-1].map{|s|' '*i+"#{s}"}.join("\n")
end
-%>
# This file is managed by PDK. Do not edit manually.
#
# The testing matrix considers Ruby/Puppet versions supported by SIMP and PE:
#
# https://puppet.com/docs/pe/2018.1/component_versions_in_recent_pe_releases.html
# https://puppet.com/misc/puppet-enterprise-lifecycle
# ------------------------------------------------------------------------------
#  release    pup   ruby   eol
# SIMP6.0.0   4.8   2.1.9  TBD
# PE 2016.5   4.10  2.1.9  2018-12-31
# PE 2017.3   5.3   2.4.4  2018-12-31
# PE 2018.1   5.5   2.4.4  2020-05 (LTS)
---
language: ruby
cache: bundler
sudo: false

bundler_args: <%= configs['bundler_args'] %>

notifications:
  email: false

addons:
  apt:
    packages:
      - rpm

before_install:
<% configs['before_install'].each do |task| -%>
- <%= task %>
<% end -%>

env:
  global:
<% configs['global_env'].each do |env| -%>
  - <%= env %>
<% end -%>

jobs:
  include:
  - stage: check
    rvm: 2.4.4
    env: PUPPET_VERSION="~> 5"
    script:
<% configs['validation_checks'].map(&:split).flatten.each do |check| -%>
    - bundle exec <%= check %>
<% end -%>


<% configs['puppet_versions'].each do |version,data| -%>
  - stage: spec
    rvm: <%= data['ruby_version'] %>
    env: PUPPET_VERSION="<%= data['puppet_version'] %>"
    script:
<%   configs['spec_checks'].map(&:split).flatten.each do |check| -%>
    - bundle exec <%= check %>
<%   end -%>

<% end -%>

  - stage: deploy
    rvm: 2.4.4
    script:
    - true
    before_deploy:
<% configs['before_deploy'].each do |task| -%>
    - <%= task %>
<% end -%>
    deploy:
<% configs['deploy'].each do |provider,data| -%>
    - provider: <%= provider %>
<%=  yp(data,6) %>
      on:
<%=  yp(configs['deploy_condition'],8) %>
<% end -%>


<% if @configs['deploy'] -%>
deploy:
  provider: puppetforge
  user: <%= @configs['user'] %>
  password:
    secure: "<%= @configs['secure'] %>"
  on:
    tags: true
    all_branches: true
    condition: "$DEPLOY_TO_FORGE = yes"
<% end -%>
