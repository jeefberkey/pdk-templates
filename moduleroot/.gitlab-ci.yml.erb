<% require 'yaml'
if @configs['override'] && @configs.has_key?('custom')
  configs = @configs['custom']
elsif @configs['defaults'] && !@configs.has_key?('custom')
  configs = @configs['defaults']
else
  require 'deep_merge/core'
  defaults = @configs['defaults'].dup
  configs = DeepMerge::deep_merge!(defaults, @configs['custom'])
end
# yaml print, without trailing whitespace and leading ---
def yp(obj,i=0)
  obj.to_yaml.split("\n").map(&:rstrip)[1..-1].map{|s|' '*i+"#{s}"}.join("\n")
end
-%>
# This file is managed by PDK. Do not edit manually.
#
# The testing matrix considers Ruby/Puppet versions supported by SIMP and PE:
#
# https://puppet.com/docs/pe/2018.1/component_versions_in_recent_pe_releases.html
# https://puppet.com/misc/puppet-enterprise-lifecycle
# ------------------------------------------------------------------------------
#  release    pup   ruby   eol
# SIMP6.0.0   4.8   2.1.9  TBD
# PE 2016.5   4.10  2.1.9  2018-12-31
# PE 2017.3   5.3   2.4.4  2018-12-31
# PE 2018.1   5.5   2.4.4  2020-05 (LTS)
---
stages:
  - validation
  - unit
  - acceptance

before_script:
<%= yp(configs['before_script']) %>

<% configs['puppet_versions'].each do |version,data| -%>
# Tests for the <%= version %> platform, using:
#   Puppet: <%= data['puppet_version'] %>
#   Ruby: <%= data['ruby_version'] %>
<%= version %>-validation:
  stage: validation
  tags:
    - docker
  image: ruby:<%= data['ruby_version'].split('.')[0..1].join('.') %>
  variables:
    PUPPET_VERSION: "<%= data['puppet_version'] %>"
  cache:
<%=  yp(configs['cache'],4) %>
  script:
<%   configs['validation_checks'].map(&:split).flatten.each do |check| -%>
  - bundle exec <%= check %>
<%   end -%>
<%= version %>-unit:
  stage: unit
  tags:
    - docker
  image: ruby:<%= data['ruby_version'].split('.')[0..1].join('.') %>
  variables:
    PUPPET_VERSION: "<%= data['puppet_version'] %>"
  cache:
<%=  yp(configs['cache'],4) %>
  script:
<%   configs['spec_checks'].map(&:split).flatten.each do |check| -%>
  - bundle exec <%= check %>
<%   end -%>

<% end -%>

# Acceptance tests
# ==============================================================================
<% configs['beaker_suites'].each do |suite| -%>
<%   configs['beaker_matrix'].each do |mat,data| -%>
<%     nodeset = mat =~ /oel/ ? 'oel' : 'default' -%>
<%= suite %>-<%= mat %>:
  stage: acceptance
  tags:
    - beaker
  cache:
<%=    yp(configs['cache'],4) %>
<%     if data['variables'] -%>
  variables:
    PUPPET_VERSION: "<%= data['puppet_version'] %>"
<%=      yp(data['variables'],4) %>
<%     end -%>
  script:
  - bundle exec rake spec_clean
  - bundle exec 'beaker:suites[<%= suite %>,<%= nodeset %>]'
<%     if data['only_with_SIMP_FULL_MATRIX'] == true -%>
  only:
    variables:
    - $SIMP_FULL_MATRIX
<%     end -%>

<%   end -%>
<% end -%>
